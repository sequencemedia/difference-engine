"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"CHAR_FROM_ENTITY_NAME",{enumerable:true,get:function(){return _charFromEntityName.default;}});Object.defineProperty(exports,"ENTITY_NAME_FROM_CHAR",{enumerable:true,get:function(){return _entityNameFromChar.default;}});exports.fromCodePointMap=exports.entityNameFromCharMap=exports.entityCodeFromCharMap=exports.charFromEntityNameMap=exports.charFromEntityCodeMap=void 0;exports.getCharFromEntityCode=getCharFromEntityCode;exports.getCharFromEntityName=getCharFromEntityName;exports.getEntityCodeFromChar=getEntityCodeFromChar;exports.getEntityNameFromChar=getEntityNameFromChar;exports.getFromCodePoint=getFromCodePoint;var _charFromEntityName=_interopRequireDefault(require("./char-from-entity-name"));var _entityNameFromChar=_interopRequireDefault(require("./entity-name-from-char"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const fromCodePointMap=new Map();exports.fromCodePointMap=fromCodePointMap;const charFromEntityCodeMap=new Map();exports.charFromEntityCodeMap=charFromEntityCodeMap;const charFromEntityNameMap=new Map(Object.entries(_charFromEntityName.default));exports.charFromEntityNameMap=charFromEntityNameMap;const entityCodeFromCharMap=new Map();exports.entityCodeFromCharMap=entityCodeFromCharMap;const entityNameFromCharMap=new Map(Object.entries(_entityNameFromChar.default));exports.entityNameFromCharMap=entityNameFromCharMap;function getFromCodePoint(index){if(fromCodePointMap.has(index))return fromCodePointMap.get(index);const char=String.fromCodePoint(index);fromCodePointMap.set(index,char);return char;}function getCharFromEntityCode(entityCode){if(charFromEntityCodeMap.has(entityCode))return charFromEntityCodeMap.get(entityCode);const a=entityCode.match(/#(\d+);/);if(a){const[m,v]=a;const n=m&&Number(v);if(!isNaN(n)){const char=String.fromCodePoint(n);charFromEntityCodeMap.set(entityCode,char);return char;}}return null;}function getCharFromEntityName(entityName){if(charFromEntityNameMap.has(entityName))return charFromEntityNameMap.get(entityName);return null;}function getEntityCodeFromChar(char){if(entityCodeFromCharMap.has(char))return entityCodeFromCharMap.get(char);const n=char.codePointAt(0);if(n!==undefined){const entityCode=`&#${n};`;entityCodeFromCharMap.set(char,entityCode);return entityCode;}return null;}function getEntityNameFromChar(char){if(entityNameFromCharMap.has(char))return entityNameFromCharMap.get(char);return null;}