"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;exports.exclusive=exclusive;exports.inclusive=inclusive;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function has(array,value){let i=0;const j=array.length;for(i,j;i<j;i=i+1){if(array[i]===value){return true;}}return null;}function getInclusiveItems(alpha,omega){let i=0;const j=alpha.length;let value;const items=[];for(i,j;i<j;i=i+1){if(has(omega,value=alpha[i])===true){items.push(value);}}return items;}function getExclusiveItems(alpha,omega){let i=0;const j=alpha.length;let value;const items=[];for(i,j;i<j;i=i+1){if(has(omega,value=alpha[i])===null){items.push(value);}}return items;}function inclusive(alpha,omega){if(Array.isArray(alpha)&&Array.isArray(omega)){return getInclusiveItems(alpha,omega);}return[];}function exclusive(alpha,omega){if(Array.isArray(alpha)&&Array.isArray(omega)){return getExclusiveItems(alpha,omega);}return[];}class DifferenceEngine{}exports.default=DifferenceEngine;_defineProperty(DifferenceEngine,"inclusive",inclusive);_defineProperty(DifferenceEngine,"exclusive",exclusive);