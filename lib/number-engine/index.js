"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Distance",{enumerable:true,get:function(){return _distance.default;}});Object.defineProperty(exports,"Temperature",{enumerable:true,get:function(){return _temperature.default;}});Object.defineProperty(exports,"Weight",{enumerable:true,get:function(){return _weight.default;}});exports.default=void 0;Object.defineProperty(exports,"fibonacci",{enumerable:true,get:function(){return _fibonacci.default;}});exports.fromHexToDec=fromHexToDec;exports.fromOctToDec=fromOctToDec;Object.defineProperty(exports,"haversine",{enumerable:true,get:function(){return _haversine.default;}});var _common=require("../common");var _fibonacci=_interopRequireDefault(require("./fibonacci"));var _haversine=_interopRequireDefault(require("./haversine"));var _weight=_interopRequireDefault(require("./weight"));var _temperature=_interopRequireDefault(require("./temperature"));var _distance=_interopRequireDefault(require("./distance"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(typeof res!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}const OCT=8;const HEX=16;function fromHexToDec(v){return(0,_common.isString)(v)?parseInt(v,HEX):(0,_common.isNumber)(v)?v:NaN;}function fromOctToDec(v){return(0,_common.isString)(v)?parseInt(v,OCT):(0,_common.isNumber)(v)?v:NaN;}class NumberEngine{}exports.default=NumberEngine;_defineProperty(NumberEngine,"fibonacci",_fibonacci.default);_defineProperty(NumberEngine,"haversine",_haversine.default);_defineProperty(NumberEngine,"fromHexToDec",fromHexToDec);_defineProperty(NumberEngine,"fromOctToDec",fromOctToDec);_defineProperty(NumberEngine,"Temperature",_temperature.default);_defineProperty(NumberEngine,"Weight",_weight.default);_defineProperty(NumberEngine,"Distance",_distance.default);