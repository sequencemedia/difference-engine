"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.convert=convert;exports.default=void 0;exports.fromCmToFt=fromCmToFt;exports.fromCmToIn=fromCmToIn;exports.fromCmToKm=fromCmToKm;exports.fromCmToMi=fromCmToMi;exports.fromCmToMm=fromCmToMm;exports.fromCmToMt=fromCmToMt;exports.fromCmToYd=fromCmToYd;exports.fromFtToCm=fromFtToCm;exports.fromFtToIn=fromFtToIn;exports.fromFtToKm=fromFtToKm;exports.fromFtToMi=fromFtToMi;exports.fromFtToMm=fromFtToMm;exports.fromFtToMt=fromFtToMt;exports.fromFtToYd=fromFtToYd;exports.fromInToCm=fromInToCm;exports.fromInToFt=fromInToFt;exports.fromInToKm=fromInToKm;exports.fromInToMi=fromInToMi;exports.fromInToMm=fromInToMm;exports.fromInToMt=fromInToMt;exports.fromInToYd=fromInToYd;exports.fromKmToCm=fromKmToCm;exports.fromKmToFt=fromKmToFt;exports.fromKmToIn=fromKmToIn;exports.fromKmToMi=fromKmToMi;exports.fromKmToMm=fromKmToMm;exports.fromKmToMt=fromKmToMt;exports.fromKmToYd=fromKmToYd;exports.fromMiToCm=fromMiToCm;exports.fromMiToFt=fromMiToFt;exports.fromMiToIn=fromMiToIn;exports.fromMiToKm=fromMiToKm;exports.fromMiToMm=fromMiToMm;exports.fromMiToMt=fromMiToMt;exports.fromMiToYd=fromMiToYd;exports.fromMmToCm=fromMmToCm;exports.fromMmToFt=fromMmToFt;exports.fromMmToIn=fromMmToIn;exports.fromMmToKm=fromMmToKm;exports.fromMmToMi=fromMmToMi;exports.fromMmToMt=fromMmToMt;exports.fromMmToYd=fromMmToYd;exports.fromMtToCm=fromMtToCm;exports.fromMtToFt=fromMtToFt;exports.fromMtToIn=fromMtToIn;exports.fromMtToKm=fromMtToKm;exports.fromMtToMi=fromMtToMi;exports.fromMtToMm=fromMtToMm;exports.fromMtToYd=fromMtToYd;exports.fromYdToCm=fromYdToCm;exports.fromYdToFt=fromYdToFt;exports.fromYdToIn=fromYdToIn;exports.fromYdToKm=fromYdToKm;exports.fromYdToMi=fromYdToMi;exports.fromYdToMm=fromYdToMm;exports.fromYdToMt=fromYdToMt;var _common=require("../common");function _defineProperty(obj,key,value){key=_toPropertyKey(key);if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return typeof key==="symbol"?key:String(key);}function _toPrimitive(input,hint){if(typeof input!=="object"||input===null)return input;var prim=input[Symbol.toPrimitive];if(prim!==undefined){var res=prim.call(input,hint||"default");if(typeof res!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return(hint==="string"?String:Number)(input);}const MMIN=0.03937007874;const INMM=25.4000000001016;function fromKmToMt(n){return(0,_common.isNumber)(n)?n*1000:NaN;}function fromKmToCm(n){return(0,_common.isNumber)(n)?n*1000*100:NaN;}function fromKmToMm(n){return(0,_common.isNumber)(n)?n*1000*100*10:NaN;}function fromKmToIn(n){return(0,_common.isNumber)(n)?n*10*100*1000*MMIN:NaN;}function fromKmToFt(n){return(0,_common.isNumber)(n)?n*10*100*1000*MMIN/12:NaN;}function fromKmToYd(n){return(0,_common.isNumber)(n)?n*10*100*1000*MMIN/12/3:NaN;}function fromKmToMi(n){return(0,_common.isNumber)(n)?n*10*100*1000*MMIN/12/3/1760:NaN;}function fromMtToKm(n){return(0,_common.isNumber)(n)?n/1000:NaN;}function fromMtToCm(n){return(0,_common.isNumber)(n)?n*100:NaN;}function fromMtToMm(n){return(0,_common.isNumber)(n)?n*100*10:NaN;}function fromMtToIn(n){return(0,_common.isNumber)(n)?n*10*100*MMIN:NaN;}function fromMtToFt(n){return(0,_common.isNumber)(n)?n*10*100*MMIN/12:NaN;}function fromMtToYd(n){return(0,_common.isNumber)(n)?n*10*100*MMIN/12/3:NaN;}function fromMtToMi(n){return(0,_common.isNumber)(n)?n*10*100*MMIN/12/3/1760:NaN;}function fromCmToKm(n){return(0,_common.isNumber)(n)?n/100/1000:NaN;}function fromCmToMt(n){return(0,_common.isNumber)(n)?n/100:NaN;}function fromCmToMm(n){return(0,_common.isNumber)(n)?n*10:NaN;}function fromCmToIn(n){return(0,_common.isNumber)(n)?n*10*MMIN:NaN;}function fromCmToFt(n){return(0,_common.isNumber)(n)?n*10*MMIN/12:NaN;}function fromCmToYd(n){return(0,_common.isNumber)(n)?n*10*MMIN/12/3:NaN;}function fromCmToMi(n){return(0,_common.isNumber)(n)?n*10*MMIN/12/3/1760:NaN;}function fromMmToKm(n){return(0,_common.isNumber)(n)?n/10/100/1000:NaN;}function fromMmToMt(n){return(0,_common.isNumber)(n)?n/10/100:NaN;}function fromMmToCm(n){return(0,_common.isNumber)(n)?n/10:NaN;}function fromMmToIn(n){return(0,_common.isNumber)(n)?n*MMIN:NaN;}function fromMmToFt(n){return(0,_common.isNumber)(n)?n*MMIN/12:NaN;}function fromMmToYd(n){return(0,_common.isNumber)(n)?n*MMIN/12/3:NaN;}function fromMmToMi(n){return(0,_common.isNumber)(n)?n*MMIN/12/3/1760:NaN;}function fromInToKm(n){return(0,_common.isNumber)(n)?n*INMM/10/100/1000:NaN;}function fromInToMt(n){return(0,_common.isNumber)(n)?n*INMM/10/100:NaN;}function fromInToCm(n){return(0,_common.isNumber)(n)?n*INMM/10:NaN;}function fromInToMm(n){return(0,_common.isNumber)(n)?n*INMM:NaN;}function fromInToFt(n){return(0,_common.isNumber)(n)?n/12:NaN;}function fromInToYd(n){return(0,_common.isNumber)(n)?n/12/3:NaN;}function fromInToMi(n){return(0,_common.isNumber)(n)?n/12/3/1760:NaN;}function fromFtToKm(n){return(0,_common.isNumber)(n)?n*12*INMM/10/100/1000:NaN;}function fromFtToMt(n){return(0,_common.isNumber)(n)?n*12*INMM/10/100:NaN;}function fromFtToCm(n){return(0,_common.isNumber)(n)?n*12*INMM/10:NaN;}function fromFtToMm(n){return(0,_common.isNumber)(n)?n*12*INMM:NaN;}function fromFtToIn(n){return(0,_common.isNumber)(n)?n*12:NaN;}function fromFtToYd(n){return(0,_common.isNumber)(n)?n/3:NaN;}function fromFtToMi(n){return(0,_common.isNumber)(n)?n/3/1760:NaN;}function fromYdToKm(n){return(0,_common.isNumber)(n)?n*3*12*INMM/10/100/1000:NaN;}function fromYdToMt(n){return(0,_common.isNumber)(n)?n*3*12*INMM/10/100:NaN;}function fromYdToCm(n){return(0,_common.isNumber)(n)?n*3*12*INMM/10:NaN;}function fromYdToMm(n){return(0,_common.isNumber)(n)?n*3*12*INMM:NaN;}function fromYdToIn(n){return(0,_common.isNumber)(n)?n*3*12:NaN;}function fromYdToFt(n){return(0,_common.isNumber)(n)?n*3:NaN;}function fromYdToMi(n){return(0,_common.isNumber)(n)?n/1760:NaN;}function fromMiToKm(n){return(0,_common.isNumber)(n)?n*1760*3*12*INMM/10/100/1000:NaN;}function fromMiToMt(n){return(0,_common.isNumber)(n)?n*1760*3*12*INMM/10/100:NaN;}function fromMiToCm(n){return(0,_common.isNumber)(n)?n*1760*3*12*INMM/10:NaN;}function fromMiToMm(n){return(0,_common.isNumber)(n)?n*1760*3*12*INMM:NaN;}function fromMiToYd(n){return(0,_common.isNumber)(n)?n*1760:NaN;}function fromMiToFt(n){return(0,_common.isNumber)(n)?n*1760*3:NaN;}function fromMiToIn(n){return(0,_common.isNumber)(n)?n*1760*3*12:NaN;}function convert(amount){return{fromKm:{toMt(){return fromKmToMt(amount);},toCm(){return fromKmToCm(amount);},toMm(){return fromKmToMm(amount);},toIn(){return fromKmToIn(amount);},toFt(){return fromKmToFt(amount);},toYd(){return fromKmToYd(amount);},toMi(){return fromKmToMi(amount);}},fromMt:{toKm(){return fromMtToKm(amount);},toCm(){return fromMtToCm(amount);},toMm(){return fromMtToMm(amount);},toIn(){return fromMtToIn(amount);},toFt(){return fromMtToFt(amount);},toYd(){return fromMtToYd(amount);},toMi(){return fromMtToMi(amount);}},fromCm:{toKm(){return fromCmToKm(amount);},toMt(){return fromCmToMt(amount);},toMm(){return fromCmToMm(amount);},toIn(){return fromCmToIn(amount);},toFt(){return fromCmToFt(amount);},toYd(){return fromCmToYd(amount);},toMi(){return fromCmToMi(amount);}},fromMm:{toKm(){return fromMmToKm(amount);},toMt(){return fromMmToMt(amount);},toCm(){return fromMmToCm(amount);},toIn(){return fromMmToIn(amount);},toFt(){return fromMmToFt(amount);},toYd(){return fromMmToYd(amount);},toMi(){return fromMmToMi(amount);}},fromIn:{toFt(){return fromInToFt(amount);},toYd(){return fromInToYd(amount);},toMi(){return fromInToMi(amount);},toKm(){return fromInToKm(amount);},toMt(){return fromInToMt(amount);},toCm(){return fromInToCm(amount);},toMm(){return fromInToMm(amount);}},fromFt:{toIn(){return fromFtToIn(amount);},toYd(){return fromFtToYd(amount);},toMi(){return fromFtToMi(amount);},toKm(){return fromFtToKm(amount);},toMt(){return fromFtToMt(amount);},toCm(){return fromFtToCm(amount);},toMm(){return fromFtToMm(amount);}},fromYd:{toIn(){return fromYdToIn(amount);},toFt(){return fromYdToFt(amount);},toMi(){return fromYdToMi(amount);},toKm(){return fromYdToKm(amount);},toMt(){return fromYdToMt(amount);},toCm(){return fromYdToCm(amount);},toMm(){return fromYdToMm(amount);}},fromMi:{toIn(){return fromMiToIn(amount);},toFt(){return fromMiToFt(amount);},toYd(){return fromMiToYd(amount);},toKm(){return fromMiToKm(amount);},toMt(){return fromMiToMt(amount);},toCm(){return fromMiToCm(amount);},toMm(){return fromMiToMm(amount);}}};}class Distance{}exports.default=Distance;_defineProperty(Distance,"fromKmToMt",fromKmToMt);_defineProperty(Distance,"fromKmToCm",fromKmToCm);_defineProperty(Distance,"fromKmToMm",fromKmToMm);_defineProperty(Distance,"fromKmToIn",fromKmToIn);_defineProperty(Distance,"fromKmToFt",fromKmToFt);_defineProperty(Distance,"fromKmToYd",fromKmToYd);_defineProperty(Distance,"fromKmToMi",fromKmToMi);_defineProperty(Distance,"fromMtToKm",fromMtToKm);_defineProperty(Distance,"fromMtToCm",fromMtToCm);_defineProperty(Distance,"fromMtToMm",fromMtToMm);_defineProperty(Distance,"fromMtToIn",fromMtToIn);_defineProperty(Distance,"fromMtToFt",fromMtToFt);_defineProperty(Distance,"fromMtToYd",fromMtToYd);_defineProperty(Distance,"fromMtToMi",fromMtToMi);_defineProperty(Distance,"fromCmToKm",fromCmToKm);_defineProperty(Distance,"fromCmToMt",fromCmToMt);_defineProperty(Distance,"fromCmToMm",fromCmToMm);_defineProperty(Distance,"fromCmToIn",fromCmToIn);_defineProperty(Distance,"fromCmToFt",fromCmToFt);_defineProperty(Distance,"fromCmToYd",fromCmToYd);_defineProperty(Distance,"fromCmToMi",fromCmToMi);_defineProperty(Distance,"fromMmToKm",fromMmToKm);_defineProperty(Distance,"fromMmToMt",fromMmToMt);_defineProperty(Distance,"fromMmToCm",fromMmToCm);_defineProperty(Distance,"fromMmToIn",fromMmToIn);_defineProperty(Distance,"fromMmToFt",fromMmToFt);_defineProperty(Distance,"fromMmToYd",fromMmToYd);_defineProperty(Distance,"fromMmToMi",fromMmToMi);_defineProperty(Distance,"fromInToKm",fromInToKm);_defineProperty(Distance,"fromInToMt",fromInToMt);_defineProperty(Distance,"fromInToCm",fromInToCm);_defineProperty(Distance,"fromInToMm",fromInToMm);_defineProperty(Distance,"fromInToFt",fromInToFt);_defineProperty(Distance,"fromInToYd",fromInToYd);_defineProperty(Distance,"fromInToMi",fromInToMi);_defineProperty(Distance,"fromFtToKm",fromFtToKm);_defineProperty(Distance,"fromFtToMt",fromFtToMt);_defineProperty(Distance,"fromFtToCm",fromFtToCm);_defineProperty(Distance,"fromFtToMm",fromFtToMm);_defineProperty(Distance,"fromFtToIn",fromFtToIn);_defineProperty(Distance,"fromFtToYd",fromFtToYd);_defineProperty(Distance,"fromFtToMi",fromFtToMi);_defineProperty(Distance,"fromYdToKm",fromYdToKm);_defineProperty(Distance,"fromYdToMt",fromYdToMt);_defineProperty(Distance,"fromYdToCm",fromYdToCm);_defineProperty(Distance,"fromYdToMm",fromYdToMm);_defineProperty(Distance,"fromYdToIn",fromYdToIn);_defineProperty(Distance,"fromYdToFt",fromYdToFt);_defineProperty(Distance,"fromYdToMi",fromYdToMi);_defineProperty(Distance,"fromMiToKm",fromMiToKm);_defineProperty(Distance,"fromMiToMt",fromMiToMt);_defineProperty(Distance,"fromMiToCm",fromMiToCm);_defineProperty(Distance,"fromMiToMm",fromMiToMm);_defineProperty(Distance,"fromMiToIn",fromMiToIn);_defineProperty(Distance,"fromMiToFt",fromMiToFt);_defineProperty(Distance,"fromMiToYd",fromMiToYd);_defineProperty(Distance,"convert",convert);